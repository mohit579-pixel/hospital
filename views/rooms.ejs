<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Video Chat App</title>
    <link rel="stylesheet" href="style.css">
    <script src="https://kit.fontawesome.com/c939d0e917.js"></script>
    <style>
        @import url("https://fonts.googleapis.com/css2?family=Poppins:wght@400;500;600&display=swap");

:root {
  --main-darklg: #1d2635;
  --main-dark: #161d29;
  --primary-color: #00B8A9;
  --main-light: #eeeeee;
  font-family: "Poppins", sans-serif;
}

* {
  margin: 0;
  padding: 0;
}

.header {
  display: flex;
  justify-content: center;
  align-items: center;
  height: 8vh;
  position: relative;
  width: 100%;
  background-color: var(--main-darklg);
}

.logo > h3 {
  color: var(--main-light);
}

.main {
  overflow: hidden;
  height: 92vh;
  display: flex;
}

.main_left {
  flex: 1;
  display: flex;
  flex-direction: column;
}

.videos_group {
  flex-grow: 1;
  display: flex;
  justify-content: center;
  align-items: center;
  padding: 1rem;
  background-color: var(--main-dark);
}

video {
  height: 300px;
  border-radius: 1rem;
  margin: 0.5rem;
  width: 400px;
  object-fit: cover;
  transform: rotateY(180deg);
  -webkit-transform: rotateY(180deg);
  -moz-transform: rotateY(180deg);
}

.options {
  padding: 1rem;
  display: flex;
  background-color: var(--main-darklg);
}

.options_left {
  display: flex;
}

.options_right {
  margin-left: auto;
}

.options_button {
  display: flex;
  justify-content: center;
  align-items: center;
  background-color: var(--primary-color);
  height: 50px;
  border-radius: 50px;
  color: var(--main-light);
  font-size: 1.2rem;
  width: 50px;
  margin: 0 0.5rem;
}

.background_red {
  background-color: #f6484a;
}

.main_right {
  display: flex;
  flex-direction: column;
  flex: 0.3;
  background-color: #242f41;
}

.main_chat_window {
  flex-grow: 1;
  overflow-y: scroll;
}

.main_chat_window::-webkit-scrollbar {
  display: none;
}

.main_message_container {
  padding: 1rem;
  display: flex;
  align-items: center;
  justify-content: center;
}

.main_message_container > input {
  height: 50px;
  flex: 1;
  font-size: 1rem;
  border-radius: 5px;
  padding-left: 20px;
  border: none;
}

.messages {
  display: flex;
  flex-direction: column;
  margin: 1.5rem;
}

.message {
  display: flex;
  flex-direction: column;
}

.message > b {
  color: #eeeeee;
  display: flex;
  align-items: center;
  text-transform: capitalize;
}

.message > b > i {
  margin-right: 0.7rem;
  font-size: 1.5rem;
}

.message > span {
  background-color: #eeeeee;
  margin: 1rem 0;
  padding: 1rem;
  border-radius: 5px;
}

#video-grid {
  display: flex;
  justify-content: center;
  flex-wrap: wrap;
}

#showChat {
  display: none;
}

.header_back {
  display: none;
  position: absolute;
  font-size: 1.3rem;
  top: 17px;
  left: 28px;
  color: #fff;
}

@media (max-width: 700px) {
  .main_right {
    display: none;
  }
  .main_left {
    width: 100%;
    flex: 1;
  }

  video {
    height: auto;
    width: 100%;
  }

  #showChat {
    display: flex;
  }
}
    </style>
</head>
<body>
    <div class="header">
        <div class="logo">
            <div class="header_back">
                <i class="fas fa-angle-left"></i>
            </div>
            <h3>Video Chat</h3>
        </div>
    </div>
    <div class="main">
        <div class="main_left">
            <div class="videos_group" id="video-grid"></div>
            <div class="options">
                <div class="options_left">
                    <div id="stopVideo" class="options_button">
                        <i class="fa fa-video-camera"></i>
                    </div>
                    <div id="muteButton" class="options_button">
                        <i class="fa fa-microphone"></i>
                    </div>
                    <div id="disconnect" class="options_button background_red">
                        <i class="fa fa-phone"></i>
                    </div>
                </div>
                <div class="options_right">
                    <div id="inviteButton" class="options_button">
                        <i class="fas fa-user-plus"></i>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/socket.io/4.4.1/socket.io.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/peerjs/1.3.1/peerjs.min.js"></script>
    <script>
        const socket = io("/");
        const videoGrid = document.getElementById("video-grid");
        const myVideo = document.createElement("video");
        myVideo.muted = true;
        
        const user = prompt("Enter your name");
        
        var peer = new Peer({
          host: 'your-peerjs-host.com', // Change this to your PeerJS host
          port: 443, // Change this to your PeerJS port
          path: '/peerjs',
        });
        
        let myVideoStream;
        navigator.mediaDevices
          .getUserMedia({
            audio: true,
            video: true,
          })
          .then((stream) => {
            myVideoStream = stream;
            addVideoStream(myVideo, stream);
        
            peer.on("call", (call) => {
              console.log('someone call me');
              call.answer(stream);
              const video = document.createElement("video");
              call.on("stream", (userVideoStream) => {
                addVideoStream(video, userVideoStream);
              });
            });
        
            socket.on("user-connected", (userId) => {
              connectToNewUser(userId, stream);
            });
          });
        
        const connectToNewUser = (userId, stream) => {
          console.log('I call someone' + userId);
          const call = peer.call(userId, stream);
          const video = document.createElement("video");
          call.on("stream", (userVideoStream) => {
            addVideoStream(video, userVideoStream);
          });
        };
        
        peer.on("open", (id) => {
          console.log('my id is' + id);
          socket.emit("join-room", ROOM_ID, id, user);
        });
        
        const addVideoStream = (video, stream) => {
          video.srcObject = stream;
          video.addEventListener("loadedmetadata", () => {
            video.play();
            videoGrid.append(video);
          });
        };
        
        const inviteButton = document.querySelector("#inviteButton");
        const muteButton = document.querySelector("#muteButton");
        const stopVideo = document.querySelector("#stopVideo");
        const disconnectBtn = document.querySelector("#disconnect");
        
        muteButton.addEventListener("click", () => {
          const enabled = myVideoStream.getAudioTracks()[0].enabled;
          myVideoStream.getAudioTracks()[0].enabled = !enabled;
          const html = enabled ? `<i class="fas fa-microphone"></i>` : `<i class="fas fa-microphone-slash"></i>`;
          muteButton.classList.toggle("background_red");
          muteButton.innerHTML = html;
        });
        
        stopVideo.addEventListener("click", () => {
          const enabled = myVideoStream.getVideoTracks()[0].enabled;
          myVideoStream.getVideoTracks()[0].enabled = !enabled;
          const html = enabled ? `<i class="fas fa-video"></i>` : `<i class="fas fa-video-slash"></i>`;
          stopVideo.classList.toggle("background_red");
          stopVideo.innerHTML = html;
        });
        
        inviteButton.addEventListener("click", () => {
          prompt("Copy this link and send it to people you want to have video call with",
            window.location.href
          );
        });
        
        disconnectBtn.addEventListener("click", () => {
          peer.disconnect();
          const myVideoElements = document.querySelectorAll("video");
          myVideoElements.forEach(element => {
            element.remove();
          });
          socket.emit("disconnect");
          window.location.href = "https://www.google.com";
        });
        
    </script>
</body>
</html>
